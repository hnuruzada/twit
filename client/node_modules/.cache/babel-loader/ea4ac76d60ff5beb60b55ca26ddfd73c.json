{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hesen\\\\Desktop\\\\twitter-clone\\\\client\\\\src\\\\views\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProfileCard from \"../components/card/ProfileCard\";\nimport TweetCard from \"../components/card/TweetCard/TweetCard\";\nimport { getProfileTweets, getVisitedProfile } from \"../redux/actions/visitedProfileActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const {\n    data,\n    tweets\n  } = useSelector(state => state.visitedProfile);\n  const {\n    modifiedTweet,\n    newRetweet\n  } = useSelector(state => state.tweet);\n  const currentProfile = useSelector(state => state.currentProfile.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getVisitedProfile(username));\n    dispatch(getProfileTweets(username));\n  }, [dispatch, username, modifiedTweet, newRetweet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ProfileCard, {\n        profile: data,\n        currentProfile: currentProfile.username === username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), tweets && tweets.map(tweet => /*#__PURE__*/_jsxDEV(TweetCard, {\n        tweet: tweet\n      }, tweet._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 35\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"I9FLPAa4HAzV9fn6b3TIASuapmw=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useEffect","useParams","useDispatch","useSelector","ProfileCard","TweetCard","getProfileTweets","getVisitedProfile","jsxDEV","_jsxDEV","Profile","_s","username","data","tweets","state","visitedProfile","modifiedTweet","newRetweet","tweet","currentProfile","dispatch","children","profile","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/Hesen/Desktop/twitter-clone/client/src/views/Profile.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProfileCard from \"../components/card/ProfileCard\";\r\nimport TweetCard from \"../components/card/TweetCard/TweetCard\";\r\nimport {\r\n  getProfileTweets,\r\n  getVisitedProfile,\r\n} from \"../redux/actions/visitedProfileActions\";\r\nconst Profile = () => {\r\n  const { username } = useParams();\r\n  const { data, tweets } = useSelector((state) => state.visitedProfile);\r\n  const { modifiedTweet, newRetweet } = useSelector((state) => state.tweet);\r\n  const currentProfile = useSelector((state) => state.currentProfile.data);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getVisitedProfile(username));\r\n    dispatch(getProfileTweets(username));\r\n  }, [dispatch, username, modifiedTweet, newRetweet]);\r\n\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <div>\r\n          <ProfileCard\r\n            profile={data}\r\n            currentProfile={currentProfile.username === username}\r\n          />\r\n          {tweets &&\r\n            tweets.map((tweet) => <TweetCard key={tweet._id} tweet={tweet} />)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,SAAS,MAAM,wCAAwC;AAC9D,SACEC,gBAAgB,EAChBC,iBAAiB,QACZ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAS,CAAC,GAAGX,SAAS,CAAC,CAAC;EAChC,MAAM;IAAEY,IAAI;IAAEC;EAAO,CAAC,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,cAAc,CAAC;EACrE,MAAM;IAAEC,aAAa;IAAEC;EAAW,CAAC,GAAGf,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACI,KAAK,CAAC;EACzE,MAAMC,cAAc,GAAGjB,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACK,cAAc,CAACP,IAAI,CAAC;EAExE,MAAMQ,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAACd,iBAAiB,CAACK,QAAQ,CAAC,CAAC;IACrCS,QAAQ,CAACf,gBAAgB,CAACM,QAAQ,CAAC,CAAC;EACtC,CAAC,EAAE,CAACS,QAAQ,EAAET,QAAQ,EAAEK,aAAa,EAAEC,UAAU,CAAC,CAAC;EAEnD,oBACET,OAAA;IAAAa,QAAA,EACGT,IAAI,iBACHJ,OAAA;MAAAa,QAAA,gBACEb,OAAA,CAACL,WAAW;QACVmB,OAAO,EAAEV,IAAK;QACdO,cAAc,EAAEA,cAAc,CAACR,QAAQ,KAAKA;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,EACDb,MAAM,IACLA,MAAM,CAACc,GAAG,CAAET,KAAK,iBAAKV,OAAA,CAACJ,SAAS;QAAiBc,KAAK,EAAEA;MAAM,GAAxBA,KAAK,CAACU,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA1BID,OAAO;EAAA,QACUT,SAAS,EACLE,WAAW,EACEA,WAAW,EAC1BA,WAAW,EAEjBD,WAAW;AAAA;AAAA4B,EAAA,GANxBpB,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}