{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hesen\\\\Desktop\\\\twitter-clone\\\\client\\\\src\\\\views\\\\Tweet.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../components/Spinner\";\nimport TweetCard from \"../components/card/TweetCard/TweetCard\";\nimport CommentForm from \"../components/form/CommentForm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTweetById } from \"../redux/actions/tweetActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tweet() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const tweet = useSelector(state => state.tweet);\n  const {\n    tweetById,\n    newTweet,\n    modifiedTweet\n  } = tweet;\n  useEffect(() => {\n    dispatch(getTweetById(id));\n  }, [dispatch, id, newTweet, modifiedTweet]);\n  return tweetById ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TweetCard, {\n      tweet: tweetById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      tweet: tweetById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet__replies\",\n      children: \"Replies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), tweetById.replies.map(comment => /*#__PURE__*/_jsxDEV(TweetCard, {\n      tweet: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Tweet, \"vzESrTYFv9py+Xg6uAMFotW2soU=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = Tweet;\nexport default Tweet;\nvar _c;\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"names":["React","useEffect","useParams","Spinner","TweetCard","CommentForm","useSelector","useDispatch","getTweetById","jsxDEV","_jsxDEV","Tweet","_s","id","dispatch","tweet","state","tweetById","newTweet","modifiedTweet","children","fileName","_jsxFileName","lineNumber","columnNumber","className","replies","map","comment","_c","$RefreshReg$"],"sources":["C:/Users/Hesen/Desktop/twitter-clone/client/src/views/Tweet.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport TweetCard from \"../components/card/TweetCard/TweetCard\";\r\nimport CommentForm from \"../components/form/CommentForm\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTweetById } from \"../redux/actions/tweetActions\";\r\n\r\nfunction Tweet() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const tweet = useSelector((state) => state.tweet);\r\n  const { tweetById, newTweet, modifiedTweet } = tweet;\r\n\r\n  useEffect(() => {\r\n    dispatch(getTweetById(id));\r\n  }, [dispatch, id, newTweet, modifiedTweet]);\r\n\r\n  return tweetById ? (\r\n    <div>\r\n      <TweetCard tweet={tweetById} />\r\n      <CommentForm tweet={tweetById} />\r\n      <div className=\"tweet__replies\">Replies</div>\r\n      {tweetById.replies.map((comment) => (\r\n        <TweetCard tweet={comment} />\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <Spinner />\r\n  );\r\n}\r\n\r\nexport default Tweet;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,SAAS,MAAM,wCAAwC;AAC9D,OAAOC,WAAW,MAAM,gCAAgC;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAMY,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,KAAK,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAM;IAAEE,SAAS;IAAEC,QAAQ;IAAEC;EAAc,CAAC,GAAGJ,KAAK;EAEpDd,SAAS,CAAC,MAAM;IACda,QAAQ,CAACN,YAAY,CAACK,EAAE,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACC,QAAQ,EAAED,EAAE,EAAEK,QAAQ,EAAEC,aAAa,CAAC,CAAC;EAE3C,OAAOF,SAAS,gBACdP,OAAA;IAAAU,QAAA,gBACEV,OAAA,CAACN,SAAS;MAACW,KAAK,EAAEE;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/Bd,OAAA,CAACL,WAAW;MAACU,KAAK,EAAEE;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCd,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAL,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC5CP,SAAS,CAACS,OAAO,CAACC,GAAG,CAAEC,OAAO,iBAC7BlB,OAAA,CAACN,SAAS;MAACW,KAAK,EAAEa;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC,gBAENd,OAAA,CAACP,OAAO;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACX;AACH;AAACZ,EAAA,CAvBQD,KAAK;EAAA,QACGT,SAAS,EACPK,WAAW,EAEdD,WAAW;AAAA;AAAAuB,EAAA,GAJlBlB,KAAK;AAyBd,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}